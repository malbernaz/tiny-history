{"version":3,"file":"tiny-history.js","sources":["../index.js"],"sourcesContent":["function parseURL(href) {\n  const link = document.createElement(\"a\");\n  link.href = href;\n\n  const pathname = (link.pathname || location.pathname)\n    .split(\"/\")\n    .filter(Boolean)\n    .join(\"/\");\n\n  return {\n    pathname: `/${pathname}`,\n    search: link.search,\n    hash: link.hash\n  };\n}\n\nfunction createLocation(path, state) {\n  const newLocation = { state: state || null };\n\n  let newURL;\n  if (path === undefined) {\n    newURL = parseURL(location.href);\n  } else {\n    const key = Math.random()\n      .toString(36)\n      .substr(2, 5);\n    newURL = parseURL(path);\n    newLocation.key = key;\n  }\n\n  newLocation.pathname = newURL.pathname;\n  newLocation.search = newURL.search;\n  newLocation.hash = newURL.hash;\n\n  return newLocation;\n}\n\nexport default function createHistory() {\n  let listeners = [];\n  let location = createLocation();\n  let entries = [location];\n\n  function handlePopState({ state }) {\n    location = state || entries[0];\n    listeners.forEach(listener => listener(location, \"POP\"));\n  }\n\n  function listen(listener) {\n    if (typeof listener !== \"function\") {\n      throw new Error(\"listener must be a function\");\n    }\n\n    listeners.push(listener);\n\n    if (listeners.length === 1) {\n      addEventListener(\"popstate\", handlePopState, false);\n    }\n\n    return () => {\n      listeners = listeners.filter((l, i) => i !== listeners.indexOf(listener));\n\n      if (!listeners.length) {\n        removeEventListener(\"popstate\", handlePopState);\n      }\n    };\n  }\n\n  function push(path, state) {\n    location = createLocation(path, state);\n    entries.push(location);\n    history.pushState(location, null, path);\n    listeners.forEach(listener => listener(location, \"PUSH\"));\n  }\n\n  function replace(path, state) {\n    location = createLocation(path, state);\n    entries.pop();\n    entries.push(location);\n    history.replaceState(location, null, path);\n    listeners.forEach(listener => listener(location, \"REPLACE\"));\n  }\n\n  return {\n    go: index => history.go(index),\n    back: () => history.back(),\n    forward: () => history.forward(),\n    get length() {\n      return entries.length;\n    },\n    get location() {\n      return location;\n    },\n    listen,\n    push,\n    replace\n  };\n}\n"],"names":["parseURL","href","const","link","document","createElement","pathname","location","split","filter","Boolean","join","search","hash","createLocation","path","state","newURL","newLocation","undefined","key","Math","random","toString","substr","handlePopState","ref","entries","listeners","forEach","listener","let","go","index","history","back","forward","length","listen","Error","push","addEventListener","l","i","indexOf","removeEventListener","pushState","replace","pop","replaceState"],"mappings":"2LAAA,SAASA,EAASC,GAChBC,IAAMC,EAAOC,SAASC,cAAc,KAQpC,OAPAF,EAAKF,KAAOA,GAQVK,SAAU,KANMH,EAAKG,UAAYC,SAASD,UACzCE,MAAM,KACNC,OAAOC,SACPC,KAAK,KAINC,OAAQT,EAAKS,OACbC,KAAMV,EAAKU,MAIf,SAASC,EAAeC,EAAMC,GAC5Bd,IAEIe,EAFEC,GAAgBF,MAAOA,GAAS,MAGtC,QAAaG,IAATJ,EACFE,EAASjB,EAASO,SAASN,UACtB,CACLC,IAAMkB,EAAMC,KAAKC,SACdC,SAAS,IACTC,OAAO,EAAG,GACbP,EAASjB,EAASe,GAClBG,EAAYE,IAAMA,EAOpB,OAJAF,EAAYZ,SAAWW,EAAOX,SAC9BY,EAAYN,OAASK,EAAOL,OAC5BM,EAAYL,KAAOI,EAAOJ,KAEnBK,SAGT,WAKE,SAASO,EAAeC,GACtBnB,WAAoBoB,EAAQ,GAC5BC,EAAUC,QAAQ,SAAAC,UAAYA,EAASvB,EAAU,SANnDwB,IAAIH,KACArB,EAAWO,IACXa,GAAWpB,GA0Cf,OACEyB,GAAI,SAAAC,UAASC,QAAQF,GAAGC,IACxBE,KAAM,kBAAMD,QAAQC,QACpBC,QAAS,kBAAMF,QAAQE,WACvBC,aACE,OAAOV,EAAQU,QAEjB9B,eACE,OAAOA,GAET+B,OA7CF,SAAgBR,GACd,GAAwB,mBAAbA,EACT,MAAUS,MAAM,+BASlB,OANAX,EAAUY,KAAKV,GAEU,IAArBF,EAAUS,QACZI,iBAAiB,WAAYhB,GAAgB,GAGxC,YACLG,EAAYA,EAAUnB,OAAO,SAACiC,EAAGC,UAAMA,IAAMf,EAAUgB,QAAQd,MAEhDO,QACbQ,oBAAoB,WAAYpB,KA+BpCe,KA1BF,SAAczB,EAAMC,GAClBT,EAAWO,EAAeC,EAAMC,GAChCW,EAAQa,KAAKjC,GACb2B,QAAQY,UAAUvC,EAAU,KAAMQ,GAClCa,EAAUC,QAAQ,SAAAC,UAAYA,EAASvB,EAAU,WAuBjDwC,QApBF,SAAiBhC,EAAMC,GACrBT,EAAWO,EAAeC,EAAMC,GAChCW,EAAQqB,MACRrB,EAAQa,KAAKjC,GACb2B,QAAQe,aAAa1C,EAAU,KAAMQ,GACrCa,EAAUC,QAAQ,SAAAC,UAAYA,EAASvB,EAAU"}