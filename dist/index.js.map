{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["let a = document.createElement(\"a\");\n\nfunction createLocation(path, state) {\n  a.href = path || location.href;\n\n  return {\n    state: state || null,\n    pathname:\n      \"/\" +\n      (a.pathname || location.pathname)\n        .split(\"/\")\n        .filter(Boolean)\n        .join(\"/\"),\n    search: a.search,\n    hash: a.hash,\n    key:\n      path &&\n      Math.random()\n        .toString(36)\n        .substr(2, 5)\n  };\n}\n\nexport default function createHistory() {\n  let listeners = [],\n    location = createLocation(),\n    entries = [location],\n    action;\n\n  function callListeners() {\n    listeners.forEach(listener => listener(location, action));\n  }\n\n  function handlePopState(e) {\n    location = e.state || entries[0];\n    action = \"POP\";\n    callListeners();\n  }\n\n  return {\n    get length() {\n      return entries.length;\n    },\n    get location() {\n      return location;\n    },\n    get action() {\n      return action;\n    },\n    listen(listener) {\n      listeners.push(listener);\n\n      if (listeners.length === 1) {\n        addEventListener(\"popstate\", handlePopState, false);\n      }\n\n      return () => {\n        listeners.splice(listeners.indexOf(listener), 1);\n\n        if (!listeners.length) {\n          removeEventListener(\"popstate\", handlePopState);\n        }\n      };\n    },\n    push(path, state) {\n      location = createLocation(path, state);\n      entries.push(location);\n      history.pushState(location, null, path);\n      action = \"PUSH\";\n      callListeners();\n    },\n    replace(path, state) {\n      location = createLocation(path, state);\n      entries.pop();\n      entries.push(location);\n      history.replaceState(location, null, path);\n      action = \"REPLACE\";\n      callListeners();\n    },\n    go(i) {\n      history.go(i);\n    },\n    back() {\n      history.back();\n    },\n    forward() {\n      history.forward();\n    }\n  };\n}\n"],"names":["createLocation","path","state","a","href","location","pathname","split","filter","Boolean","join","search","hash","key","Math","random","toString","substr","createHistory","callListeners","listeners","forEach","listener","action","handlePopState","e","entries","let","length","listen","push","addEventListener","splice","indexOf","removeEventListener","history","pushState","replace","pop","replaceState","go","i","back","forward","document","createElement"],"mappings":"YAEA,SAASA,gBAAeC,EAAMC,GAG5B,MAFAC,GAAEC,KAAOH,GAAQI,SAASD,MAGxBF,MAAOA,GAAS,KAChBI,SACE,KACCH,EAAEG,UAAYD,SAASC,UACrBC,MAAM,KACNC,OAAOC,SACPC,KAAK,KACVC,OAAQR,EAAEQ,OACVC,KAAMT,EAAES,KACRC,IACEZ,GACAa,KAAKC,SACFC,SAAS,IACTC,OAAO,EAAG,IAInB,QAAwBC,iBAMtB,QAASC,KACPC,EAAUC,QAAQ,SAAAC,SAAYA,GAASjB,EAAUkB,KAGnD,QAASC,GAAeC,GACtBpB,EAAWoB,EAAEvB,OAASwB,EAAQ,GAC9BH,EAAS,MACTJ,IAZFQ,GAGEJ,GAHEH,KACFf,EAAWL,iBACX0B,GAAWrB,EAab,QACEuB,aACE,MAAOF,GAAQE,QAEjBvB,eACE,MAAOA,IAETkB,aACE,MAAOA,IAETM,gBAAOP,GAOL,MANAF,GAAUU,KAAKR,GAEU,IAArBF,EAAUQ,QACZG,iBAAiB,WAAYP,GAAgB,GAGxC,WACLJ,EAAUY,OAAOZ,EAAUa,QAAQX,GAAW,GAEzCF,EAAUQ,QACbM,oBAAoB,WAAYV,KAItCM,cAAK7B,EAAMC,GACTG,EAAWL,eAAeC,EAAMC,GAChCwB,EAAQI,KAAKzB,GACb8B,QAAQC,UAAU/B,EAAU,KAAMJ,GAClCsB,EAAS,OACTJ,KAEFkB,iBAAQpC,EAAMC,GACZG,EAAWL,eAAeC,EAAMC,GAChCwB,EAAQY,MACRZ,EAAQI,KAAKzB,GACb8B,QAAQI,aAAalC,EAAU,KAAMJ,GACrCsB,EAAS,UACTJ,KAEFqB,YAAGC,GACDN,QAAQK,GAAGC,IAEbC,gBACEP,QAAQO,QAEVC,mBACER,QAAQQ,YAtFdhB,GAAIxB,GAAIyC,SAASC,cAAc"}