{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["function createURL(href) {\n  const link = document.createElement(\"a\");\n  link.href = href;\n\n  const pathname = link.pathname\n    .split(\"/\")\n    .filter(Boolean)\n    .join(\"/\");\n\n  return {\n    pathname: `/${pathname}`,\n    search: link.search,\n    hash: link.hash\n  };\n}\n\nfunction createLocation(path, state) {\n  const newLocation = { state: state || null };\n\n  let newURL;\n  if (path === undefined) {\n    newURL = createURL(location.href);\n  } else {\n    const key = Math.random()\n      .toString(36)\n      .substr(2, 5);\n    newURL = createURL(path);\n    newLocation.key = key;\n  }\n\n  newLocation.pathname = newURL.pathname;\n  newLocation.search = newURL.search;\n  newLocation.hash = newURL.hash;\n\n  return newLocation;\n}\n\nexport default function createHistory() {\n  let listeners = [];\n  let location = createLocation();\n  let entries = [location];\n\n  function handlePopState({ state }) {\n    location = state || entries[0];\n    listeners.forEach(listener => listener(location, \"POP\"));\n  }\n\n  function listen(listener) {\n    if (typeof listener !== \"function\") {\n      throw new Error(\"listener must be a function\");\n    }\n\n    listeners.push(listener);\n\n    if (listeners.length === 1) {\n      addEventListener(\"popstate\", handlePopState, false);\n    }\n\n    return () => {\n      listeners = listeners.filter((l, i) => i !== listeners.indexOf(listener));\n\n      if (!listeners.length) {\n        removeEventListener(\"popstate\", handlePopState);\n      }\n    };\n  }\n\n  function push(path, state) {\n    location = createLocation(path, state);\n    entries.push(location);\n    history.pushState(location, null, path);\n    listeners.forEach(listener => listener(location, \"PUSH\"));\n  }\n\n  function replace(path, state) {\n    location = createLocation(path, state);\n    entries.pop();\n    entries.push(location);\n    history.replaceState(location, null, path);\n    listeners.forEach(listener => listener(location, \"REPLACE\"));\n  }\n\n  return {\n    go: index => history.go(index),\n    back: () => history.back(),\n    forward: () => history.forward(),\n    get length() {\n      return entries.length;\n    },\n    get location() {\n      return location;\n    },\n    listen,\n    push,\n    replace\n  };\n}\n"],"names":["createURL","href","const","link","document","createElement","pathname","split","filter","Boolean","join","search","hash","createLocation","path","state","newURL","newLocation","undefined","location","key","Math","random","toString","substr","createHistory","handlePopState","ref","entries","listeners","forEach","listener","let","go","index","history","back","forward","length","listen","Error","push","addEventListener","l","i","indexOf","removeEventListener","pushState","replace","pop","replaceState"],"mappings":"aAAA,SAASA,UAAUC,GACjBC,IAAMC,EAAOC,SAASC,cAAc,KAQpC,OAPAF,EAAKF,KAAOA,GAQVK,SAAU,IANKH,EAAKG,SACnBC,MAAM,KACNC,OAAOC,SACPC,KAAK,KAINC,OAAQR,EAAKQ,OACbC,KAAMT,EAAKS,MAIf,SAASC,eAAeC,EAAMC,GAC5Bb,IAEIc,EAFEC,GAAgBF,MAAOA,GAAS,MAGtC,QAAaG,IAATJ,EACFE,EAAShB,UAAUmB,SAASlB,UACvB,CACLC,IAAMkB,EAAMC,KAAKC,SACdC,SAAS,IACTC,OAAO,EAAG,GACbR,EAAShB,UAAUc,GACnBG,EAAYG,IAAMA,EAOpB,OAJAH,EAAYX,SAAWU,EAAOV,SAC9BW,EAAYN,OAASK,EAAOL,OAC5BM,EAAYL,KAAOI,EAAOJ,KAEnBK,EAGT,SAAwBQ,gBAKtB,SAASC,EAAeC,GACtBR,WAAoBS,EAAQ,GAC5BC,EAAUC,QAAQ,SAAAC,UAAYA,EAASZ,EAAU,SANnDa,IAAIH,KACAV,EAAWN,iBACXe,GAAWT,GA0Cf,OACEc,GAAI,SAAAC,UAASC,QAAQF,GAAGC,IACxBE,KAAM,kBAAMD,QAAQC,QACpBC,QAAS,kBAAMF,QAAQE,WACvBC,aACE,OAAOV,EAAQU,QAEjBnB,eACE,OAAOA,GAEToB,OA7CF,SAAgBR,GACd,GAAwB,mBAAbA,EACT,MAAUS,MAAM,+BASlB,OANAX,EAAUY,KAAKV,GAEU,IAArBF,EAAUS,QACZI,iBAAiB,WAAYhB,GAAgB,GAGxC,YACLG,EAAYA,EAAUrB,OAAO,SAACmC,EAAGC,UAAMA,IAAMf,EAAUgB,QAAQd,MAEhDO,QACbQ,oBAAoB,WAAYpB,KA+BpCe,KA1BF,SAAc3B,EAAMC,GAClBI,EAAWN,eAAeC,EAAMC,GAChCa,EAAQa,KAAKtB,GACbgB,QAAQY,UAAU5B,EAAU,KAAML,GAClCe,EAAUC,QAAQ,SAAAC,UAAYA,EAASZ,EAAU,WAuBjD6B,QApBF,SAAiBlC,EAAMC,GACrBI,EAAWN,eAAeC,EAAMC,GAChCa,EAAQqB,MACRrB,EAAQa,KAAKtB,GACbgB,QAAQe,aAAa/B,EAAU,KAAML,GACrCe,EAAUC,QAAQ,SAAAC,UAAYA,EAASZ,EAAU"}