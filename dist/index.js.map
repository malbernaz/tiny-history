{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["export default class BrowserHistory {\n  constructor() {\n    this.listeners = [];\n    this.location = this.createLocation();\n    this.entries = [this.location];\n\n    this.go = index => history.go(index);\n    this.back = () => history.back();\n    this.forward = () => history.forward();\n\n    this.handlePopState = ({ state }) => {\n      this.location = state || this.entries[0];\n      this.listeners.forEach(listener => listener(this.location, \"POP\"));\n    };\n  }\n\n  get length() {\n    return this.entries.length;\n  }\n\n  listen(listener) {\n    if (typeof listener !== \"function\") {\n      throw new Error(\"listener must be a function\");\n    }\n\n    this.listeners.push(listener);\n\n    if (this.listeners.length === 1) {\n      addEventListener(\"popstate\", this.handlePopState, false);\n    }\n\n    return () => {\n      this.listeners = this.listeners.filter(\n        (l, i) => i !== this.listeners.indexOf(listener)\n      );\n\n      if (!this.listeners.length) {\n        removeEventListener(\"popstate\", this.handlePopState);\n      }\n    };\n  }\n\n  createLocation(path = location, state) {\n    const newLocation = { state: state || null };\n\n    let newURL;\n    if (path instanceof Location) {\n      newURL = new URL(path);\n    } else {\n      const key = Math.random().toString(36).substr(2, 5);\n      newURL = new URL(path, location);\n      newLocation.key = key;\n    }\n\n    newLocation.pathname = newURL.pathname;\n    newLocation.search = newURL.search;\n    newLocation.hash = newURL.hash;\n\n    return newLocation;\n  }\n\n  push(path, state) {\n    this.location = this.createLocation(path, state);\n    this.entries.push(this.location);\n    history.pushState(this.location, null, path);\n    this.listeners.forEach(listener => listener(this.location, \"PUSH\"));\n  }\n\n  replace(path, state) {\n    this.location = this.createLocation(path, state);\n    this.entries.pop();\n    this.entries.push(this.location);\n    history.replaceState(this.location, null, path);\n    this.listeners.forEach(listener => listener(this.location, \"REPLACE\"));\n  }\n}\n"],"names":["BrowserHistory","this","listeners","location","createLocation","entries","go","index","history","back","forward","handlePopState","ref","state","this$1","forEach","listener","prototypeAccessors","length","listen","Error","push","addEventListener","filter","l","i","indexOf","removeEventListener","path","newURL","newLocation","Location","URL","key","Math","random","toString","substr","pathname","search","hash","pushState","replace","pop","replaceState"],"mappings":"mLAAe,IAAMA,EAAe,sBAElCC,KAAOC,aACPD,KAAOE,SAAWF,KAAKG,iBACvBH,KAAOI,SAAWJ,KAAKE,UAEvBF,KAAOK,GAAK,SAAAC,UAASC,QAAQF,GAAGC,IAChCN,KAAOQ,KAAO,kBAAMD,QAAQC,QAC5BR,KAAOS,QAAU,kBAAMF,QAAQE,WAE/BT,KAAOU,eAAiB,SAACC,OAAEC,UACzBC,EAAOX,SAAWU,GAASZ,EAAKI,QAAQ,GACxCS,EAAOZ,UAAUa,QAAQ,SAAAC,UAAYA,EAASf,EAAKE,SAAU,gCAIjEc,EAAEC,sBACA,OAASjB,KAAKI,QAAQa,QAGxBlB,YAAEmB,gBAAOH,cACP,GAA0B,mBAAbA,EACX,MAAYI,MAAM,+BASpB,OANAnB,KAAOC,UAAUmB,KAAKL,GAEU,IAA1Bf,KAAKC,UAAUgB,QACnBI,iBAAmB,WAAYrB,KAAKU,gBAAgB,GAG7C,WACPG,EAAOZ,UAAYD,EAAKC,UAAUqB,OAChC,SAAGC,EAAGC,UAAMA,IAAMxB,EAAKC,UAAUwB,QAAQV,KAGpCf,EAAKC,UAAUgB,QACpBS,oBAAsB,WAAY1B,EAAKU,kBAK7CX,YAAEI,wBAAewB,EAAiBf,kBAAVV,UACtB,IAEM0B,EAFEC,GAAgBjB,MAAOA,GAAS,MAGxC,GAAMe,aAAgBG,SACpBF,EAAW,IAAIG,IAAIJ,OACZ,CACP,IAAQK,EAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GACnDR,EAAW,IAAIG,IAAIJ,EAAMzB,UACzB2B,EAAcG,IAAMA,EAOtB,OAJAH,EAAcQ,SAAWT,EAAOS,SAChCR,EAAcS,OAASV,EAAOU,OAC9BT,EAAcU,KAAOX,EAAOW,KAEnBV,GAGX9B,YAAEqB,cAAKO,EAAMf,cACXZ,KAAOE,SAAWF,KAAKG,eAAewB,EAAMf,GAC5CZ,KAAOI,QAAQgB,KAAKpB,KAAKE,UACzBK,QAAUiC,UAAUxC,KAAKE,SAAU,KAAMyB,GACzC3B,KAAOC,UAAUa,QAAQ,SAAAC,UAAYA,EAASf,EAAKE,SAAU,WAG/DH,YAAE0C,iBAAQd,EAAMf,cACdZ,KAAOE,SAAWF,KAAKG,eAAewB,EAAMf,GAC5CZ,KAAOI,QAAQsC,MACf1C,KAAOI,QAAQgB,KAAKpB,KAAKE,UACzBK,QAAUoC,aAAa3C,KAAKE,SAAU,KAAMyB,GAC5C3B,KAAOC,UAAUa,QAAQ,SAAAC,UAAYA,EAASf,EAAKE,SAAU"}